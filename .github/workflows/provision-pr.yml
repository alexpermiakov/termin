name: Provision Pull Request 

on:
  workflow_dispatch:
  pull_request:

jobs:
  provision:
    name: Provision Pull Request
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read

    if: github.event_name == 'pull_request'
    env:
      TF_VAR_environment: "development"
      TF_VAR_region: eu-central-1
      TF_VAR_aws_account_id: 746669194690
      TF_VAR_pr_number: ${{ github.event.number }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.2
          terraform_wrapper: false

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        id: oidc
        with:
          role-to-assume: arn:aws:iam::746669194690:role/TerraformExecutionRole
          aws-region: eu-central-1
          audience: sts.amazonaws.com 

      - name: Delete KMS Alias (if exists)
        run: |
          if aws kms describe-alias --alias-name alias/eks/termin-eks-pr-${{ github.event.number }} > /dev/null 2>&1; then
            echo "Deleting existing KMS alias..."
            aws kms delete-alias --alias-name alias/eks/termin-eks-pr-${{ github.event.number }}
          else
            echo "KMS alias does not exist. Skipping deletion."
          fi

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate
      
      - name: Terraform Init and Plan Development
        working-directory: src/entry
        run: |
          terraform init \
            -backend-config="region=eu-central-1" \
            -backend-config="bucket=terraform-state-terminapp-dev" \
            -backend-config="key=pr-${{ github.event.number }}/state.tfstate" \
            -backend-config="use_lockfile=true"
          terraform plan -out=tfplan.bin
      
      - name: Show Plan Output
        working-directory: src/entry
        run: terraform show -no-color tfplan.bin

      - name: Terraform Apply Development
        id: apply-step
        working-directory: src/entry
        continue-on-error: true
        run: terraform apply tfplan.bin

      - name: Terraform Destroy on Failure
        if: steps.apply-step.outcome == 'failure'
        working-directory: src/entry
        run: |
          echo "Terraform apply failed. Starting destroy to clean up."
          terraform destroy -auto-approve
      
      - name: Fail the Pipeline
        if: steps.apply-step.outcome == 'failure'
        run: |
          echo "Terraform apply failed. Cleanup complete. Marking job as failed."
          exit 1
  