name: Infrastructure Pipeline

on:
  push:
    branches:
      - main
  release:
    types:
      - published
  pull_request:

jobs:
  terraform:
    name: Terraform
    runs-on: ubuntu-latest
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
    defaults:
      run:
        working-directory: infrastructure
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.2
          terraform_wrapper: false

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Check tag
        id: check-tag
        run: |
          if [[ ${{ github.ref }} =~ ^refs\/tags\/v[0-9]+\.[0-9]+\.[0-9]+$ ]] && [[ ${{ github.event_name }} == 'release' ]]; then
            echo "environment=production" >> $GITHUB_OUTPUT
          elif [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            echo "environment=development" >> $GITHUB_OUTPUT
          else
            echo "environment=unknown" >> $GITHUB_OUTPUT
          fi

      - name: Terraform Init and Plan Development
        if: steps.check-tag.outputs.environment == 'development'
        working-directory: infrastructure/environments/dev
        run: |
          terraform init
          terraform plan

      - name: Terraform Apply Development
        if: steps.check-tag.outputs.environment == 'development'
        working-directory: infrastructure/environments/dev
        run: terraform apply -auto-approve

      - name: Terraform Init and Plan Production
        if: steps.check-tag.outputs.environment == 'production'
        working-directory: infrastructure/environments/prod
        run: |
          terraform init
          terraform plan

      - name: Terraform Apply Production
        if: steps.check-tag.outputs.environment == 'production'
        working-directory: infrastructure/environments/prod
        run: terraform apply -auto-approve