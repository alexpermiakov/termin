name: Infrastructure Pipeline

on:
  workflow_dispatch:
  push:
    branches:
      - main
  release:
    types:
      - published
  pull_request:

jobs:
  terraform-environments-dev:
    name: Terraform Environments
    runs-on: ubuntu-latest
    environment: development
    if: github.ref == 'refs/heads/main'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.2
          terraform_wrapper: false

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Init and Plan Development
        working-directory: infrastructure/environments/dev
        run: |
          terraform init \
            -backend-config="region=${{secrets.AWS_DEFAULT_REGION}}" \
            -backend-config="bucket=${{ secrets.s3_bucket_name }}" \
            -backend-config="key=state.tfstate" \
            -backend-config="encrypt=true" \
            -backend-config="dynamodb_table=${{ secrets.dynamodb_table }}"
          terraform plan
        env:
          TF_VAR_environment: "dev"
          TF_VAR_region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Terraform Apply Development
        working-directory: infrastructure/environments/dev
        run: terraform apply -auto-approve

  terraform-environments-prod:
    name: Terraform Environments
    runs-on: ubuntu-latest
    environment: production
    if: github.event_name == 'release'
    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.11.2
          terraform_wrapper: false

      - name: Terraform Format
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Init and Plan Production
        working-directory: infrastructure/environments/prod
        run: |
          terraform init \
            -backend-config="region=${{secrets.AWS_DEFAULT_REGION}}" \
            -backend-config="bucket=${{ secrets.s3_bucket_name }}" \
            -backend-config="key=state.tfstate" \
            -backend-config="encrypt=true" \
            -backend-config="dynamodb_table=${{ secrets.dynamodb_table }}"
          terraform plan
        env:
          TF_VAR_environment: "prod"
          TF_VAR_region: ${{ secrets.AWS_DEFAULT_REGION }}

      - name: Terraform Apply Production
        working-directory: infrastructure/environments/prod
        run: terraform apply -auto-approve